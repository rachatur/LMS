# Generated by Django 4.2 on 2024-12-02 07:13

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("is_instructor", models.BooleanField(default=False)),
                ("is_employee", models.BooleanField(default=True)),
                ("is_admin", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Assignment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("Programming", "Programming"),
                            ("Science", "Science"),
                        ],
                        max_length=255,
                    ),
                ),
                ("description", models.TextField(blank=True)),
                ("prerequisites", models.CharField(blank=True, max_length=255)),
                ("due_date", models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Content",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "content_type",
                    models.CharField(
                        choices=[
                            ("video", "Video"),
                            ("article", "Article"),
                            ("paragraph", "Paragraph"),
                        ],
                        max_length=10,
                    ),
                ),
                ("content_url", models.URLField(blank=True, null=True)),
                ("text_content", models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Course",
            fields=[
                ("course_id", models.AutoField(primary_key=True, serialize=False)),
                ("course_code", models.CharField(max_length=50, unique=True)),
                ("course_name", models.CharField(max_length=150)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("course_content", models.TextField()),
                ("course_type", models.CharField(max_length=50)),
                ("description", models.TextField(blank=True, null=True)),
                ("course_url", models.URLField(blank=True, max_length=255, null=True)),
                ("created_by", models.CharField(max_length=150)),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("last_update_date", models.DateTimeField(auto_now=True)),
                (
                    "last_update_login",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("last_updated_by", models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name="CourseModule",
            fields=[
                (
                    "course_module_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("module_name", models.CharField(max_length=150)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("created_by", models.CharField(max_length=150)),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("last_update_date", models.DateTimeField(auto_now=True)),
                (
                    "last_update_login",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("last_updated_by", models.CharField(max_length=150)),
                (
                    "course_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses_details.course",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                ("role_id", models.AutoField(primary_key=True, serialize=False)),
                ("role_name", models.CharField(max_length=150, unique=True)),
                ("role_code", models.CharField(max_length=50, unique=True)),
                ("role_type", models.CharField(max_length=50)),
                ("role_status", models.BooleanField(default=True)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("created_by", models.CharField(max_length=150)),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("last_update_date", models.DateTimeField(auto_now=True)),
                (
                    "last_update_login",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("last_updated_by", models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name="UserProgress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("completed", models.BooleanField(default=False)),
                (
                    "content",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses_details.content",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RoleAssignment",
            fields=[
                (
                    "role_assignment_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("role_type", models.CharField(max_length=50)),
                ("delete_flag", models.BooleanField(default=False)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("created_by", models.CharField(max_length=150)),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("last_update_date", models.DateTimeField(auto_now=True)),
                (
                    "last_update_login",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("last_updated_by", models.CharField(max_length=150)),
                (
                    "id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "role_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses_details.role",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                ("subtitle", models.TextField(blank=True, null=True)),
                ("question_type", models.CharField(max_length=50)),
                ("answer_type", models.CharField(max_length=50)),
                (
                    "file_upload",
                    models.FileField(blank=True, null=True, upload_to="uploads/"),
                ),
                (
                    "assignment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses_details.assignment",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="InstructorData",
            fields=[
                ("instructor_id", models.AutoField(primary_key=True, serialize=False)),
                ("instructorName", models.CharField(max_length=100)),
                ("instructorQualification", models.CharField(max_length=100)),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instructor_data",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Group",
            fields=[
                ("group_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField(default="No description provided")),
                (
                    "users",
                    models.ManyToManyField(
                        related_name="group_users", to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CourseTracking",
            fields=[
                ("tracking_id", models.AutoField(primary_key=True, serialize=False)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField(blank=True, null=True)),
                ("progress_status", models.CharField(max_length=50)),
                ("active_flag", models.BooleanField(default=True)),
                (
                    "percent_tracking",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                ("module_status", models.CharField(max_length=50)),
                ("module_start_time", models.DateTimeField(blank=True, null=True)),
                ("module_end_time", models.DateTimeField(blank=True, null=True)),
                ("overall_status", models.CharField(max_length=50)),
                ("created_by", models.CharField(max_length=150)),
                ("creation_date", models.DateTimeField(auto_now_add=True)),
                ("last_update_date", models.DateTimeField(auto_now=True)),
                (
                    "last_update_login",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("last_updated_by", models.CharField(max_length=150)),
                (
                    "course_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses_details.course",
                    ),
                ),
                (
                    "id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "module_id",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses_details.coursemodule",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="content",
            name="course",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="contents",
                to="courses_details.course",
            ),
        ),
    ]
